<%- include('../layouts/header.ejs')  %>

<body>
    <%- include('../layouts/navbar.ejs') %>
    <main id="content" class="wrapper layout-page">
        <section class="z-index-2 position-relative pb-2 mb-12">
            <div class="bg-body-secondary mb-3">
                <div class="container">
                    <nav class="py-4 lh-30px" aria-label="breadcrumb">
                        <ol class="breadcrumb justify-content-center py-1 mb-0">
                            <li class="breadcrumb-item"><a title="Home" href="../index.html">Home</a></li>
                            <li class="breadcrumb-item"><a title="Shop" href="shop-layout-v2.html">Shop</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Check Out</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </section>
        <section class="container pb-14 pb-lg-19">
            <div class="text-center">
                <h2 class="mb-6">Check out</h2>
            </div>

            <div class="pt-12">
                <div class="row">
                    <div class="col-lg-4 pb-lg-0 pb-14 order-lg-last">
                        <div class="card border-0 rounded-0 shadow">
                            <div class="card-header px-0 mx-10 bg-transparent py-8">
                                <h4 class="fs-4 mb-8">Order Summary</h4>
                                <% let grandTotal=0 %>
                                
                                <% let stock=0; %>
                                <% let quantity=0;  %>
                                <%cartDetail?.products?.forEach((cartDatas,i)=>{ %>

                                    <% stock=cartDatas.productId.stock
                                     %>
                                     <% quantity=cartDatas.quantity
                                      %>
                                <div class="d-flex w-100 mb-7">
                                    <div class="me-6">
                                     
                                        <img  src="<%=cartDatas.productId.images[0]  %>"
                                            class="lazy-image" width="60" height="80"
                                            alt="Natural Coconut Cleansing Oil">
                                    </div>  
                                    <div class="d-flex flex-grow-1">
                                        <div class="pe-6" >
                                            
                                            
                                                    <a href="#" class><%=cartDatas.productId.productName %><span class="text-body">
                                                    </span></a>
                                            <p class="fs-14px text-body-emphasis mb-0 mt-1">Brand:
                                                
                                                <span class="text-body"><%=cartDatas.productId.brand.brandName%></span>
                                            </p>
                                            <div class="ms-auto">
                                                <p class="fs-14px text-body-emphasis mb-0 fw-bold"><%=cartDatas.productId.offePrice%></p>
                                            </div>
                                        </div>
                                        
                                    </div>
                                    <% grandTotal += cartDatas.productId.offerPrice * cartDatas.quantity %>
                                    
                                </div>
                                <% }) %>
                                                           
                            </div>
                            
                            
                            <div class="card-footer bg-transparent py-5 px-0 mx-10">
                                <%let total=0%>
                                <% let finlAmount=0%>
                                <% let quantityProduct=false%>
                               
                                <% cartDetail.products.forEach((data) => {%>
                                    <%total=data.productId.offerPrice*data.quantity%>
                                    <%finlAmount=finlAmount+total%>
                                <% }); %> 

                                <div class="d-flex align-items-center fw-bold mb-6">
                                    <span class="text-body-emphasis p-0">Total price:</span>
                                    <span class="d-block ms-auto text-body-emphasis fs-4 fw-bold">₹<%=grandTotal %></span>
                                </div>
                                <div class="d-flex align-items-center fw-bold mb-6">
                                    <span class="text-body-emphasis p-0">Discount:</span>
                                    <span class="d-block ms-auto text-body-emphasis fs-4 fw-bold" id="discount">₹.00</span>
                                </div>
                                <div class="d-flex align-items-center fw-bold mb-6">
                                    <span class="text-body-emphasis p-0">Final Amount:</span>
                                    <span class="d-block ms-auto text-body-emphasis fs-4 fw-bold" id="final">₹<%=grandTotal %></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-8 order-lg-first pe-xl-20 pe-lg-6">
                        <div class="checkout">
                            
                            <p>Have a coupon?
                                <h6 class="text-danger" id="invalidAmount"></h6>
                                <h6 class="text-danger" id="TimeExceed"></h6>
                                <a data-bs-toggle="collapse" href="#collapsecoupon" role="button" aria-expanded="false"
                                    aria-controls="collapsecoupon">Click here to enter your code</a>
                            </p>
                            <button
                                type="button"
                                class="btn btn-dark btn-hover-bg-primary btn-hover-border-primary px-11 mt-md-7 mt-4"
                                data-bs-toggle="modal"
                                data-bs-target="#availableCoupon">
                                Available Coupons
                                </button>


                                <div class="collapse" id="collapsecoupon">
                                    <div class="card mw-60 border-0">
                                        <div class="card-body py-10 px-8 my-10 border">
                                            <p class="card-text text-body-emphasis mb-8">If you have a coupon code, please apply it below.</p>
                                            <div class="input-group position-relative">
                                                <input type="text" id="couponCode" class="form-control bg-body rounded-end" placeholder="Your Code">
                                                <button type="submit" id="couponBtn" class="btn btn-dark btn-hover-bg-primary btn-hover-border-primary" onclick="apply()">
                                                    Apply Coupon
                                                </button>
                                                <button type="button" id="removeCouponBtn" class="btn btn-danger" style="display: none;" onclick="removeCoupon()">
                                                    Remove Coupon
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            <!-- Modal for available coupons  -->

                            <div class="bd-example bg-body-tertiary">
                                <div class="modal fade" id="availableCoupon" tabindex="-1" aria-labelledby="availableCouponLabel" aria-hidden="true">
                                  <div class="modal-dialog">
                                    <div class="modal-content">
                                      <div class="modal-header">
                                        <h5 class="modal-title" id="availableCouponLabel">Available Coupons</h5>
                                        
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                      </div>
                                      <div class="modal-body">

                                        <% couponsData.coupons.forEach((elements)=>{%>
                                             
                                           <% if(elements.couponStatus=='Claim'){ %>
                                        <div class="col-md-6 mb-4">
                                            <div class="card mb-5 shadow-sm" style="max-width: 410px; height: 180px; position: relative;">
                                              <div class="row g-0 h-100 " style="width: 410px;">
                                                <div class="col-md-4 h-100">
                                                  <a href="../shop/product-details-v1.html">
                                                    
                                                    <img 
                                                      src="/Image/coupon2.jpg" 
                                                      alt="<%=elements.couponId?.name %>" 
                                                      class="img-fluid rounded-start h-100" 
                                                      style="object-fit: cover; width: 100%; height: 100%;">
                                                  </a>
                                                </div>
                                                <div class="col-md-8 h-100" style="background-color: #e3e6ef;">
                                                  <div class="card-body d-flex flex-column justify-content-center h-100" style="color: #3e3e3e;">
                                                  
                                                    <!-- Coupon Details -->
                                                    <h3 class="card-title mb-2" style="color: #7d3636; font-size: 24px; font-family:fantasy;"><%= elements.couponId?.name %></h3>
                                                    <h4 class="card-text mb-2" style="color: #a33939; font-family: initial;"><%= elements.couponId?.offer %>% Off</h4>
                                                    
                                                    <p class="card-text mb-2" >
                                                      <samp style="font-size: 19px; color: #bb4021; font-family: initial;"><%= elements.couponId?.code %></samp>
                                                    </p>
                                                    
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                          <% } %>
                                          <% })  %>
                                          
                                      </div>
                                     
                                    </div>
                                  </div>
                                </div>
                              </div>
                              

                              <!-- Modal Coupon end here -->

                            <h4 class="fs-4 pt-4 mb-7">Shipping Information</h4>
                            <div class="mb-7">
                                
                                
                                <div style="border-radius: 10px; border: 1px solid gray; width: 50%; padding: 1rem; margin-bottom: 1rem;" id="addressCard" class="address-card">
                                    <div class="title" style="text-align: center; margin-bottom: 0.5rem;">
                                        <h5 style="margin: 0;">Address</h5>
                                    </div>
                                    <% addresses.forEach((value)=>{%>
                                    <div class="address-content" style="font-family: Arial, sans-serif; line-height: 1.6;  border-radius: 10px; border: 1px dashed gray; padding: 1rem; margin-bottom: 1rem;" >
                                        <div style="display: flex; flex-direction: row-reverse;">
                                            <input type="radio" class="" name="selectAddressOriginal"  onclick="radioButton('<%=value._id%>')" >
                                        </div>
                                        <p style="margin: 0;">
                                            <span style="font-weight: bold;"><%= value.name %></span><br>
                                            <%= value.street %>, <%= value.locality %><br>
                                            <%= value.city %>, <%= value.state %>, <%= value.pincode %><br>
                                            Phone: <%= value.phone %>
                                        </p>
                                        <div>
                                            <button class="btn btn-dark btn-hover-bg-primary btn-hover-border-primary px-2 mt-md-4 mt-2" style=" bottom: 10px; left: 10px; padding: 0.2rem 0.5rem; font-size: 0.7rem;" data-bs-toggle="modal" data-bs-target="#editAddress" onclick="editAddress('<%=value._id%>')" >Edit Address</button>
                                            <button class="btn btn-dark btn-hover-bg-primary btn-hover-border-primary px-2 mt-md-4 mt-2" style=" bottom: 10px; left: 10px; padding: 0.2rem 0.5rem; font-size: 0.7rem;" onclick="remove('<%=value._id%>')" >Remove</button>
                                           
                                        </div>
                                    </div>
                                    <%})%>
                                    <script>
                                          async function remove(ID){
            
                                            const response = await axios.patch('/removeAddress',{ID})

                                            if(response.data.success){
                                                window.location.reload()
                                            }
                                        }

                                        async function radioButton(addressId){
                                            await axios.patch('/radioAddress',{addressId})
                                        }
                                    </script>
                                    
                                </div>
                              <button class="btn btn-dark btn-hover-bg-primary btn-hover-border-primary px-11 mt-md-7 mt-4" data-bs-toggle="modal" data-bs-target="#addAddress">Add Address</button>  
                            
                        </div>
                        <form id="orderForm" action="/order" method="post">
                            <input type="radio" hidden class="" name="selectAddress" id="paymentAddress"  >
                            <!-- <input type="hidden" id="disc" name="disc" value="discount"> -->
                        <div class="checkout mb-7">
                            <div class="mb-7">
                                <h4 class="fs-4 mb-8 mt-12 pt-lg-1">Payment Infomation</h4>
                                <div class="nav nav-tabs border-0">
                                    <button class="btn btn-payment px-12 mx-2 py-6 me-7 my-3 nav-link">
                                        <input type="radio"    name="pp"  value="Online Payment">
                                        
                                        <span class="ms-3 text-body-emphasis fw-semibold fs-6">Razorpay</span>
                                    </button>


                                    <button class="btn btn-payment px-12 mx-2 py-6 me-7 my-3 nav-link active" 
                                        data-bs-toggle="tab" data-bs-target="#credit-card-tab">
                                        <input type="radio"   name="pp"  value="Cash on Delivery">
                                        <svg class="icon icon-paylay fs-32px text-body-emphasis">
                                          
                                        </svg>
                                        <span class="ms-3 text-body-emphasis fw-semibold fs-6" >Cash on delivery</span>
                                    </button>
                                </div>
                                <input type="text" name="paymentStatus" hidden value="paid" id="paymentStatus">
                            </div>
                            <button type="button"
                                class="btn btn-dark btn-hover-bg-primary btn-hover-border-primary px-11 mt-md-7 mt-4" onclick="placeOrder('<%=grandTotal%>','<%=cartDetail._id%>','<%=stock%>','<%=quantity%>'
                                    
                                )">Place
                                Order</button>
                        </div>
                    </form>
                    </div>
                </div>
            </div>
        </section>

        <!-- place order end here -->

        <!-- edit address -->

        <div class="modal" id="editAddress" tabindex="-1">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title">Modal title</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="addressId" name="addressId" value="">
                    <div class="mb-7">
                        
                        <div class="row">
                            <div class="col-md-6 mb-md-0 mb-7">
                                <label class="mb-5 fs-13px letter-spacing-01 fw-semibold text-uppercase">name</label>
                                <input type="text" class="form-control" id="editName" name="name"
                                    placeholder="First Name"  value="" required>
                                    <div id="nameError" class="text-danger"></div>
                            </div>
                            
                            <div class="col-md-6 mb-md-0 mb-7">
                                <label class="mb-5 fs-13px letter-spacing-01 fw-semibold text-uppercase">Phone</label>
                                <input type="number" class="form-control" id="editphone" name="phone"
                                    placeholder="Phone number" required>
                                    <div id="numberError" class="text-danger"></div>
                            </div>
                           
                        </div>
                    </div>
                    <div class="mb-7">
                        <div class="row">
                            <div class="col-md-8 mb-md-0 mb-7">
                                <label for="street-address"
                                    class="mb-5 fs-13px letter-spacing-01 fw-semibold text-uppercase">Street
                                    Address</label>
                                <input type="text" class="form-control" id="editstreetAddress" name="street"
                                    required>
                                    <div id="streetError" class="text-danger"></div>
                            </div>
                           
                        </div>
                    </div>
                    <div class="mb-7">
                        <div class="row">
                            <div class="col-md-4 mb-md-0 mb-7">
                                <label for="city"
                                    class="mb-5 fs-13px letter-spacing-01 fw-semibold text-uppercase">locality</label>
                                <input type="text" class="form-control" id="editlocality" name="locality" required>
                                <div id="localityError" class="text-danger"></div>
                            </div>
                            <div class="col-md-4 mb-md-0 mb-7">
                                <label for="state"
                                    class="mb-5 fs-13px letter-spacing-01 fw-semibold text-uppercase">State</label>
                                <input type="text" class="form-control" id="editstate" name="state" required>
                                <div id="stateError" class="text-danger"></div>
                            </div>
                            <div class="col-md-4">
                                <label for="zip"
                                    class="mb-5 fs-13px letter-spacing-01 fw-semibold text-uppercase">pin
                                    code</label>
                                <input type="number" class="form-control" id="editpincode" name="pincode" required>
                                <div id="pincodeError" class="text-danger"></div>
                                
                            </div>
                        </div>
                    </div>
                    <div class="mb-7">
                        <label class="mb-5 fs-13px letter-spacing-01 fw-semibold text-uppercase">city</label >
                        <div class=" bg-body-secondary rounded">
                            <input type="text" class="form-control" id="editcity" name="city" required>
                            <div id="cityError" class="text-danger">
                                
                            </div>
                            <p id="editEmptyError" class="text-danger"></p>
                           
                        </div>
                    </div>
                    <div class="mb-7">
                        
                        <div class="row">
                           
                            
                        </div>
                    </div>
                    

                </form>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" id="CloseId" data-bs-dismiss="modal">Close</button>
                  <button type="button" class="btn btn-primary" onclick="saveChanges()">Save Changes</button>
                </div>
              </div>
            </div>
          </div>

          <!-- add address -->

          <div class="modal" id="addAddress" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add New Address</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="firstName" class="mb-2 fs-6 fw-semibold text-uppercase">Name</label>
                                    <input type="text" class="form-control" id="firstName" name="name" placeholder="First Name" required>
                                    <p id="addnameError" style="color: red; font-size: 0.875em;"></p>
                                </div>
                                <div class="col-md-6">
                                    <label for="phone" class="mb-2 fs-6 fw-semibold text-uppercase">Phone</label>
                                    <input type="number" class="form-control" id="phone" name="phone" placeholder="Phone number" required>
                                    <p id="addnumberError"></p>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <div class="row">
                                <div class="col-md-8">
                                    <label for="streetAddress" class="mb-2 fs-6 fw-semibold text-uppercase">Street Address</label>
                                    <input type="text" class="form-control" id="streetAddress" name="street" required>
                                    <p id="addstreetError" style="color: red; font-size: 0.875em;"></p>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <div class="row">
                                <div class="col-md-4">
                                    <label for="locality" class="mb-2 fs-6 fw-semibold text-uppercase">Locality</label>
                                    <input type="text" class="form-control" id="locality" name="locality" required>
                                    <p id="addlocalityError" style="color: red; font-size: 0.875em;"></p>
                                </div>
                                <div class="col-md-4">
                                    <label for="state" class="mb-2 fs-6 fw-semibold text-uppercase">State</label>
                                    <input type="text" class="form-control" id="state" name="state" required>
                                    <p id="addstateError" style="color: red; font-size: 0.875em;"></p>
                                </div>
                                <div class="col-md-4">
                                    <label for="pincode" class="mb-2 fs-6 fw-semibold text-uppercase">Pin Code</label>
                                    <input type="number" class="form-control" id="pincode" name="pincode" required>
                                    <p id="addpincodeError" style="color: red; font-size: 0.875em;"></p>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="city" class="mb-2 fs-6 fw-semibold text-uppercase">City</label>
                            <input type="text" class="form-control" id="city" name="city" required>
                            <p id="addcityError" style="color: red; font-size: 0.875em;"></p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" id="CloseId" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick="addAddress()">Save Address</button>
                    </div>
                </div>
            </div>
        </div>
        
          <!-- add address end here -->
    </main>

    <%- include('../layouts/footer.ejs')%>

    <!-- layout footer -->
    <%- include('../layouts/layoutFooter.ejs')%>
        <!--layoutFooter  -->

        <!-- svg -->
        <%- include('../layouts/svg.ejs')%>
            <!-- svg -->

            <!-- mobile nav bar -->
            <%- include('../layouts/mobileNavbar.ejs')%>
                <!-- mobile nav bar -->
            
            </body>
            
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>

let discountAmount = 0;

async function apply() {
    const discount = document.getElementById('discount');
    const final = document.getElementById('final');
    const invalid = document.getElementById('invalidAmount');
    const exceed = document.getElementById('TimeExceed');
    const couponBtn = document.getElementById('couponBtn');
    const removeCouponBtn = document.getElementById('removeCouponBtn');
    
    try {
        const code = document.getElementById('couponCode').value;
        const response = await axios.post('/couponApply', { code: code });

        if (response.data.err) {
            exceed.textContent = response.data.err;
            invalid.textContent = 'Invalid or expired coupon';
            discount.textContent = '₹0.00';
            final.textContent = `₹${response.data.total}.00`;
        } else {
            discountAmount = response.data.discount;
            discount.textContent = `₹${response.data.discount}.00`;
            final.textContent = `₹${response.data.total}.00`;

            // Switch buttons: hide apply, show remove
            couponBtn.style.display = 'none';
            removeCouponBtn.style.display = 'inline-block';
        }
    } catch (error) {
        console.log(error);
    }
}



async function removeCoupon() {
    const discount = document.getElementById('discount');
    const final = document.getElementById('final');
    const couponBtn = document.getElementById('couponBtn');
    const removeCouponBtn = document.getElementById('removeCouponBtn');

    try {
        const response = await axios.patch('/removeCoupon');

        if (response.data.success) {
            // Reset discount to 0
            discount.textContent = '₹0.00';

            // Revert total amount to grand total (original amount)
            final.textContent = `₹${response.data.total}.00`;

            // Switch buttons: hide remove, show apply
            removeCouponBtn.style.display = 'none';
            couponBtn.style.display = 'inline-block';

            // SweetAlert to confirm removal
            Swal.fire({
                icon: 'success',
                title: 'Coupon Removed',
                text: 'The coupon was removed successfully!',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'OK'
            });
        }
    } catch (error) {
        console.log(error);
    }
}



        
async function addAddress() {
    console.log("Starting addAddress validation");

    const name = document.getElementById('firstName').value.trim();
    const phone = document.getElementById('phone').value.trim();
    const street = document.getElementById('streetAddress').value.trim();
    const city = document.getElementById('city').value.trim();
    const state = document.getElementById('state').value.trim();
    const pin = document.getElementById('pincode').value.trim();
    const locality = document.getElementById('locality').value.trim();
    const close = document.getElementById('CloseId');

    let isValid = true;
    // Clear previous error messages
    document.getElementById('addnameError').innerText = '';
    document.getElementById('addnumberError').innerText = '';
    document.getElementById('addstreetError').innerHTML = '';
    document.getElementById('addlocalityError').innerHTML = '';
    document.getElementById('addstateError').innerHTML = '';
    document.getElementById('addpincodeError').innerHTML = '';
    document.getElementById('addcityError').innerHTML = '';

    

    // Name validation
    if (name === '' || /\d/.test(name) || /[^\w\s]/.test(name)) {
        document.getElementById('addnameError').innerHTML = 'Please enter a valid name';
        isValid = false;
    }

    // Phone validation
    const phoneRegex = /^\d{10}$/;
    if (!phoneRegex.test(phone)) {
        document.getElementById('addnumberError').innerText = 'Enter a valid 10-digit phone number';
        isValid = false;
    }

    // Street Address validation
    if (street === '') {
        document.getElementById('addstreetError').innerHTML = 'Street address is required';
        isValid = false;
    }

    // Locality validation
    if (locality === '') {
        document.getElementById('addlocalityError').innerHTML = 'Locality is required';
        isValid = false;
    }

    // City validation
    if (city === '') {
        document.getElementById('addcityError').innerHTML = 'City is required';
        isValid = false;
    }

    // State validation
    if (state === '') {
        document.getElementById('addstateError').innerHTML = 'State is required';
        isValid = false;
    }

    // Pincode validation
    const pincodeRegex = /^[0-9]{6}$/;
    if (!pincodeRegex.test(pin)) {
        document.getElementById('addpincodeError').innerHTML = 'Please enter a valid 6-digit pin code';
        isValid = false;
    }

    console.log("isValid status after validation:", isValid);

    if (isValid) {
        try {
            console.log('Attempting to send address data');
            const response = await axios.post('/address', { name, phone, street, city, state, pin, locality });
            
            if (response.data.success) {
                console.log("Address saved successfully");
                window.location.reload();
            } else {
                console.error("Address could not be saved.");
            }

            close.click(); // Close modal
        } catch (error) {
            console.error("An error occurred while adding the address:", error.message);
        }
    } else {
        console.log("Validation failed; not proceeding with submission.");
    }
}








const form = document.getElementById('orderForm')

 function placeOrder(amount,userId,stock,quantity){

    try {
        let final = amount;
  
     const upi= document.querySelector('input[name="pp"]:checked')

     const Toast = Swal.mixin({
        toast: true,
        
        position: "top-end",
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.onmouseenter = Swal.stopTimer;
            toast.onmouseleave = Swal.resumeTimer;
        }
    })
    const address = document.querySelector('input[name="selectAddressOriginal"]:checked');
    
    if(quantity<=stock){
        if(upi.value==="Cash on Delivery"){
           
            if(!address){                
                Toast.fire({
                icon: "error",
                title: "No address selected"
                });
            }else if(amount>1000){                
                Toast.fire({
                icon: "error",
                title: "Cash On Delivery is not Available above 1000"
                });
            }else{
            form.submit()
            }
        }else{
            // console.log('ok its here');
            if(!address){
              alert('no address selected')
              return
            }
            if(discountAmount > 0){
                final = amount - discountAmount;   
            }
            razor(final, userId)

        }
    }else{
        
        Toast.fire({
                icon: "error",
                title: "Out of Stock"
        });
    }
    } catch (error) {
        console.log(error.message);
        
    }
    
}




function razor(amount, userId) {
    try {
        const payStatus = document.getElementById('paymentStatus')

        
            fetch('/razor', {
                method: 'POST',
                headers: { 'Content-type': 'application/json' },
                body: JSON.stringify({ amount, userId })
            }).then(res => res.json()).then(data => {
                if (data.success) {

                    let options = {
                        "key": `${data.key_id}`,
                        "amount":` ${data.amount}`,
                        "currency": "INR",
                        "name": "GLOWING",
                        "handler": function (response) {
                            form.submit();
                        },
                        "profile": {
                            "name": `${data.name}`,
                            "email": `${data.email}`
                        }
                    }

                    let razorpayObject = new Razorpay(options);
                    razorpayObject.on('payment.failed', (response) => {
                    payStatus.value="pending"
                     form.submit()
                       Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: 'Some issues happen while processing your payment. Please try again.',
                        confirmButtonText: 'Return to Checkout',
                        background: '#31363F'
                       }).then(()=>{
                         window.location.href = '/myAccount'
                       })
                        
                    });

                    razorpayObject.open();
                } else if (data.fail) {
                     Swal.fire({

                        icon: 'warning',
                        title: 'No Address',
                        text: 'Please add a shipping address before proceeding.',
                        confirmButtonText: 'Okay',
                        background: '#31363F'

                    }); 
                       
                   
                }
            })
            .catch(error => {
            console.error('Error:', error);
        });
    } catch (error) {
        console.log(error.message);
        
    }
    
        }



// ..............................edit address

async function editAddress(editID){
    const name = document.getElementById('editName')
    const phone = document.getElementById('editphone')
    const street = document.getElementById('editstreetAddress')
    const locality = document.getElementById('editlocality')
    const state = document.getElementById('editstate')
    const pinCode = document.getElementById('editpincode')
    const city = document.getElementById('editcity')
    const addressId = document.getElementById('addressId')

   try {
    const response = await axios.post('/edittAddress',{editID})
    const data = response.data
    if(data){
        name.value = data.name
        phone.value = data.phone
        street.value = data.street
        locality.value = data.locality
        state.value = data.state
        pinCode.value = data.pincode
        city.value = data.city
        addressId.value = data.addressId 
    }
   } catch (error) {
    console.log(erroe.message);
    
   }
}


async function saveChanges(){
    const name = document.getElementById('editName').value
    const phone = document.getElementById('editphone').value
    const street = document.getElementById('editstreetAddress').value
    const locality = document.getElementById('editlocality').value
    const state = document.getElementById('editstate').value
    const pinCode = document.getElementById('editpincode').value
    const city = document.getElementById('editcity').value
    const addressId = document.getElementById('addressId').value
   
    try {
        const response = await axios.patch('/saveChanges',{
            name,
            phone,
            street,
            locality,
            state,
            pincode,
            city,
            addressId
        })
        if(response.data.success){
            Swal.fire({
                title: 'Success!',
                text: 'Address updated successfully!',
                icon: 'success',
                confirmButtonText: 'OK'
            }).then((result)=>{
                if(result.isConfirmed){
                    window.location.reload()
                }
            })
            
        }else{
            Swal.fire({
                title: 'Error!',
                text: 'Failed to update the address.',
                icon: 'error',
                confirmButtonText: 'Try Again'
            });
            
        }
    } catch (error) {
        console.error(error.message);
        Swal.fire({
            title: 'Error!',
            text: 'An error occurred while updating the address.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        
    }
}

        
</script>

<!-- Mirrored from templates.g5plus.net/glowing-bootstrap-5/shop/checkout.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 27 Mar 2024 11:46:20 GMT -->

</html>
